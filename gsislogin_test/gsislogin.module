<?php

/**
 * @file
 * This file is part of gsislogin module.
 *
 *  Gsislogin is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  gsislogin is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with gsislogin.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * @file
 * Contains login nad register form alter.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function gsislogin_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'user_login_form':
      $form['gsis'] = [
        '#type' => 'inline_template',
        '#template' => '<a class="btn btn-block btn-lg btn-gsis" href="http://localhost/drupal84/gsis">
				    <i class="socicon-gsis"></i> ' . t('Login via Taxisnet') . '
			      </a>',
        '#context' => [
          'name' => 'socicon',
        ],
      ];
      // Drupal magic.. loads library.
      $form['#attached']['library'][] = 'gsislogin/gsislogin';
      break;

    case 'user_register_form':
      $form['gsis'] = [
        '#type' => 'inline_template',
        '#template' => '<a class="btn btn-block btn-lg btn-gsis" href="http://localhost/drupal84/gsis">
				    <i class="socicon-gsis"></i> ' . t('Register via Taxisnet') . '
			      </a>',
        '#context' => [
          'name' => 'socicon',
        ],
      ];
      // Drupal magic.. loads library.
      $form['#attached']['library'][] = 'gsislogin/gsislogin';
      break;
  }
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function gsislogin_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.gsislogin':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}
